import java.util.*;

class Solution {
    public int[] solution(int brown, int yellow) {
        int[] answer = new int[2];

        int area = brown + yellow;

        List<Integer> measures = getHalfMeasures(area);

        for (Integer measure : measures) {
            if (isProfit(measure, area / measure, brown)) {
                answer[0] = measure;
                answer[1] = area / measure;
            }
        }

        return answer;
    }

    // number의 약수 중 절반만 구하는 메소드 (ex. number == 6, result = 1, 2)
    private List<Integer> getHalfMeasures(int number) {
        List<Integer> result = new ArrayList<>();
        
        for (int i = 1 ; i <= number / 2 ; i++) {
            if (number % i == 0) {
                result.add(i);
            }
        }

        return result;
    }

    // width, height가 주어졌을 때 갈색 타일의 개수가 brown 과 같은지 검사하는 메소드
    private boolean isProfit(int width, int height, int brown) {
        return width * 2 + hegiht * 2 - 4 == brown;
    }
}